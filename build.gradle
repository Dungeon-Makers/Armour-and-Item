buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'


version = "${mod_version}"
group = 'com.yusuf'
archivesBaseName = mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'
            mods {
                armouranditem {
                    source sourceSets.main
                }
            }
        }
        server {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"
            property 'forge.logging.console.level', 'debug'

            mods {
                armouranditem {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')


            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            args '--mod', 'armouranditem', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')




            mods {
                armouranditem {
                    source sourceSets.main
                }

            }
        }
    }
}
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}
def gpr_creds = {
    username = property('gpr.username')
    password = property('gpr.token')
}
repositories {
    maven {
        url = uri("https://maven.pkg.github.com/realyusufismail/realyusufismail-core")
        credentials gpr_creds
    }
}

dependencies {
        minecraft 'net.minecraftforge:forge:1.16.5-36.1.2'
        compile fg.deobf("net.yusuf:realyusufismailcore:1.16.5-4.3") {
          exclude module: "forge"
     }
}





jar {
    manifest {
        attributes([
                "Specification-Title": "armouranditem",
                "Specification-Vendor": "Yusuf.I",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Yusuf.I",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/dungeon-maker/${project.repoName}")
            credentials {
                username = property('gpr.username')
                password = property('gpr.token')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            artifactId = mod_id // <<< this line here
            artifacts {
                artifact jar
            }
        }
    }
}