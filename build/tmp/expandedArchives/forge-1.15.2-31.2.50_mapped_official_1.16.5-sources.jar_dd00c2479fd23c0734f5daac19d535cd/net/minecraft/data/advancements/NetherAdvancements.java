package net.minecraft.data.advancements;

import java.util.function.Consumer;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.AdvancementRewards;
import net.minecraft.advancements.FrameType;
import net.minecraft.advancements.criterion.BrewedPotionTrigger;
import net.minecraft.advancements.criterion.ChangeDimensionTrigger;
import net.minecraft.advancements.criterion.ConstructBeaconTrigger;
import net.minecraft.advancements.criterion.DamageSourcePredicate;
import net.minecraft.advancements.criterion.DistancePredicate;
import net.minecraft.advancements.criterion.EffectsChangedTrigger;
import net.minecraft.advancements.criterion.EntityPredicate;
import net.minecraft.advancements.criterion.InventoryChangeTrigger;
import net.minecraft.advancements.criterion.KilledTrigger;
import net.minecraft.advancements.criterion.LocationPredicate;
import net.minecraft.advancements.criterion.MinMaxBounds;
import net.minecraft.advancements.criterion.MobEffectsPredicate;
import net.minecraft.advancements.criterion.NetherTravelTrigger;
import net.minecraft.advancements.criterion.PositionTrigger;
import net.minecraft.advancements.criterion.SummonedEntityTrigger;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Items;
import net.minecraft.potion.Effects;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.text.TranslationTextComponent;
import net.minecraft.world.dimension.DimensionType;
import net.minecraft.world.gen.feature.Feature;

public class NetherAdvancements implements Consumer<Consumer<Advancement>> {
   public void accept(Consumer<Advancement> p_accept_1_) {
      Advancement advancement = Advancement.Builder.advancement().display(Blocks.RED_NETHER_BRICKS, new TranslationTextComponent("advancements.nether.root.title"), new TranslationTextComponent("advancements.nether.root.description"), new ResourceLocation("textures/gui/advancements/backgrounds/nether.png"), FrameType.TASK, false, false, false).addCriterion("entered_nether", ChangeDimensionTrigger.Instance.func_203911_a(DimensionType.field_223228_b_)).save(p_accept_1_, "nether/root");
      Advancement advancement1 = Advancement.Builder.advancement().parent(advancement).display(Items.FIRE_CHARGE, new TranslationTextComponent("advancements.nether.return_to_sender.title"), new TranslationTextComponent("advancements.nether.return_to_sender.description"), (ResourceLocation)null, FrameType.CHALLENGE, true, true, false).rewards(AdvancementRewards.Builder.experience(50)).addCriterion("killed_ghast", KilledTrigger.Instance.playerKilledEntity(EntityPredicate.Builder.entity().of(EntityType.GHAST), DamageSourcePredicate.Builder.damageType().isProjectile(true).direct(EntityPredicate.Builder.entity().of(EntityType.FIREBALL)))).save(p_accept_1_, "nether/return_to_sender");
      Advancement advancement2 = Advancement.Builder.advancement().parent(advancement).display(Blocks.NETHER_BRICKS, new TranslationTextComponent("advancements.nether.find_fortress.title"), new TranslationTextComponent("advancements.nether.find_fortress.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("fortress", PositionTrigger.Instance.located(LocationPredicate.inFeature(Feature.field_202337_o))).save(p_accept_1_, "nether/find_fortress");
      Advancement advancement3 = Advancement.Builder.advancement().parent(advancement).display(Items.MAP, new TranslationTextComponent("advancements.nether.fast_travel.title"), new TranslationTextComponent("advancements.nether.fast_travel.description"), (ResourceLocation)null, FrameType.CHALLENGE, true, true, false).rewards(AdvancementRewards.Builder.experience(100)).addCriterion("travelled", NetherTravelTrigger.Instance.travelledThroughNether(DistancePredicate.horizontal(MinMaxBounds.FloatBound.atLeast(7000.0F)))).save(p_accept_1_, "nether/fast_travel");
      Advancement advancement4 = Advancement.Builder.advancement().parent(advancement1).display(Items.GHAST_TEAR, new TranslationTextComponent("advancements.nether.uneasy_alliance.title"), new TranslationTextComponent("advancements.nether.uneasy_alliance.description"), (ResourceLocation)null, FrameType.CHALLENGE, true, true, false).rewards(AdvancementRewards.Builder.experience(100)).addCriterion("killed_ghast", KilledTrigger.Instance.playerKilledEntity(EntityPredicate.Builder.entity().of(EntityType.GHAST).located(LocationPredicate.func_204008_a(DimensionType.field_223227_a_)))).save(p_accept_1_, "nether/uneasy_alliance");
      Advancement advancement5 = Advancement.Builder.advancement().parent(advancement2).display(Blocks.WITHER_SKELETON_SKULL, new TranslationTextComponent("advancements.nether.get_wither_skull.title"), new TranslationTextComponent("advancements.nether.get_wither_skull.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("wither_skull", InventoryChangeTrigger.Instance.hasItems(Blocks.WITHER_SKELETON_SKULL)).save(p_accept_1_, "nether/get_wither_skull");
      Advancement advancement6 = Advancement.Builder.advancement().parent(advancement5).display(Items.NETHER_STAR, new TranslationTextComponent("advancements.nether.summon_wither.title"), new TranslationTextComponent("advancements.nether.summon_wither.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("summoned", SummonedEntityTrigger.Instance.summonedEntity(EntityPredicate.Builder.entity().of(EntityType.WITHER))).save(p_accept_1_, "nether/summon_wither");
      Advancement advancement7 = Advancement.Builder.advancement().parent(advancement2).display(Items.BLAZE_ROD, new TranslationTextComponent("advancements.nether.obtain_blaze_rod.title"), new TranslationTextComponent("advancements.nether.obtain_blaze_rod.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("blaze_rod", InventoryChangeTrigger.Instance.hasItems(Items.BLAZE_ROD)).save(p_accept_1_, "nether/obtain_blaze_rod");
      Advancement advancement8 = Advancement.Builder.advancement().parent(advancement6).display(Blocks.BEACON, new TranslationTextComponent("advancements.nether.create_beacon.title"), new TranslationTextComponent("advancements.nether.create_beacon.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("beacon", ConstructBeaconTrigger.Instance.constructedBeacon(MinMaxBounds.IntBound.atLeast(1))).save(p_accept_1_, "nether/create_beacon");
      Advancement advancement9 = Advancement.Builder.advancement().parent(advancement8).display(Blocks.BEACON, new TranslationTextComponent("advancements.nether.create_full_beacon.title"), new TranslationTextComponent("advancements.nether.create_full_beacon.description"), (ResourceLocation)null, FrameType.GOAL, true, true, false).addCriterion("beacon", ConstructBeaconTrigger.Instance.constructedBeacon(MinMaxBounds.IntBound.exactly(4))).save(p_accept_1_, "nether/create_full_beacon");
      Advancement advancement10 = Advancement.Builder.advancement().parent(advancement7).display(Items.POTION, new TranslationTextComponent("advancements.nether.brew_potion.title"), new TranslationTextComponent("advancements.nether.brew_potion.description"), (ResourceLocation)null, FrameType.TASK, true, true, false).addCriterion("potion", BrewedPotionTrigger.Instance.brewedPotion()).save(p_accept_1_, "nether/brew_potion");
      Advancement advancement11 = Advancement.Builder.advancement().parent(advancement10).display(Items.MILK_BUCKET, new TranslationTextComponent("advancements.nether.all_potions.title"), new TranslationTextComponent("advancements.nether.all_potions.description"), (ResourceLocation)null, FrameType.CHALLENGE, true, true, false).rewards(AdvancementRewards.Builder.experience(100)).addCriterion("all_effects", EffectsChangedTrigger.Instance.hasEffects(MobEffectsPredicate.effects().and(Effects.MOVEMENT_SPEED).and(Effects.MOVEMENT_SLOWDOWN).and(Effects.DAMAGE_BOOST).and(Effects.JUMP).and(Effects.REGENERATION).and(Effects.FIRE_RESISTANCE).and(Effects.WATER_BREATHING).and(Effects.INVISIBILITY).and(Effects.NIGHT_VISION).and(Effects.WEAKNESS).and(Effects.POISON).and(Effects.SLOW_FALLING).and(Effects.DAMAGE_RESISTANCE))).save(p_accept_1_, "nether/all_potions");
      Advancement advancement12 = Advancement.Builder.advancement().parent(advancement11).display(Items.BUCKET, new TranslationTextComponent("advancements.nether.all_effects.title"), new TranslationTextComponent("advancements.nether.all_effects.description"), (ResourceLocation)null, FrameType.CHALLENGE, true, true, true).rewards(AdvancementRewards.Builder.experience(1000)).addCriterion("all_effects", EffectsChangedTrigger.Instance.hasEffects(MobEffectsPredicate.effects().and(Effects.MOVEMENT_SPEED).and(Effects.MOVEMENT_SLOWDOWN).and(Effects.DAMAGE_BOOST).and(Effects.JUMP).and(Effects.REGENERATION).and(Effects.FIRE_RESISTANCE).and(Effects.WATER_BREATHING).and(Effects.INVISIBILITY).and(Effects.NIGHT_VISION).and(Effects.WEAKNESS).and(Effects.POISON).and(Effects.WITHER).and(Effects.DIG_SPEED).and(Effects.DIG_SLOWDOWN).and(Effects.LEVITATION).and(Effects.GLOWING).and(Effects.ABSORPTION).and(Effects.HUNGER).and(Effects.CONFUSION).and(Effects.DAMAGE_RESISTANCE).and(Effects.SLOW_FALLING).and(Effects.CONDUIT_POWER).and(Effects.DOLPHINS_GRACE).and(Effects.BLINDNESS).and(Effects.BAD_OMEN).and(Effects.HERO_OF_THE_VILLAGE))).save(p_accept_1_, "nether/all_effects");
   }
}